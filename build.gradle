//file:noinspection GroovyUnusedAssignment

plugins {
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'jacoco'
    id 'checkstyle'
    id 'org.springframework.boot' version '2.7.5'
    id 'java'
    id 'io.freefair.lombok' version '6.5.1'
    id 'java-test-fixtures'
    id 'org.liquibase.gradle' version '2.1.1'
}

apply plugin: 'maven-publish'

group = 'pl.edu.pw.elka.paprykaisalami'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

testing {
    suites {
        integrationTest(JvmTestSuite) {
            dependencies {
                implementation project
            }
        }
    }
}

configurations {
    integrationTestImplementation.extendsFrom implementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly

    compileOnly.extendsFrom annotationProcessor

    liquibaseRuntime.extendsFrom runtime
}

dependencies {
    // Spring
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.data:spring-data-envers'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.13'
    implementation 'org.springdoc:springdoc-openapi-security:1.6.13'
    implementation 'io.vavr:vavr:0.10.4'

    // Nullability annotations
    implementation 'org.jetbrains:annotations:23.0.0'

    // Database Drivers
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'

    // Liquibase
    liquibaseRuntime 'org.liquibase:liquibase-core:4.18.0'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:3.0.0'
    liquibaseRuntime 'info.picocli:picocli:4.6.1'
    liquibaseRuntime 'org.postgresql:postgresql'
    liquibaseRuntime 'javax.xml.bind:jaxb-api:2.3.1'
    liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:4.18.0'
    liquibaseRuntime 'org.springframework:spring-beans'
    liquibaseRuntime 'org.springframework.data:spring-data-jpa'
    liquibaseRuntime 'org.springframework.data:spring-data-envers'
    liquibaseRuntime 'org.springframework.boot:spring-boot-starter-data-jpa'
    liquibaseRuntime sourceSets.main.output

    // Unit tests
    testImplementation sourceSets.testFixtures.output
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    testImplementation 'org.assertj:assertj-core'
    testImplementation "org.assertj:assertj-vavr:0.4.2"

    // Integration tests
    integrationTestImplementation sourceSets.testFixtures.output
    integrationTestImplementation 'org.springframework.boot:spring-boot-starter-test'
    integrationTestImplementation 'org.springframework.security:spring-security-test'
    integrationTestImplementation 'org.json:json:20220924'
    integrationTestImplementation 'net.javacrumbs.json-unit:json-unit-spring:2.36.0'
}

jacocoTestReport {
    executionData integrationTest
    dependsOn test, integrationTest // tests are required to run before generating the report
    reports {
        xml.required = true
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('integrationTest') {
    useJUnitPlatform()
}

if (project.hasProperty("changelogName") && project.hasProperty("dbPassword")) {
    liquibase {
        activities {
            main {
                changelogFile "src/main/db/changes/${project.getProperty("changelogName")}.groovy"
                url 'jdbc:postgresql://localhost:5432/geeruh'
                driver 'org.postgresql.Driver'
                username 'geeruh'
                password project.ext.dbPassword
                referenceDriver 'liquibase.ext.hibernate.database.connection.HibernateDriver'
                referenceUrl 'hibernate:spring:pl.edu.pw.elka.paprykaisalami.geeruh?dialect=org.hibernate.dialect.PostgreSQL94Dialect&hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy&hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy'
            }
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact ("./build/libs/geeruh-${version}.jar")
            components.java
        }
    }

    repositories {
        maven {
            url = "http://20.4.227.77:8081/repository/gradle-nexus-repo/"
            allowInsecureProtocol = true
            credentials {
                username = System.properties['nexusUsername']
                password = System.properties['nexusPassword']
            }
        }
    }
}
